{"version":3,"sources":["flexiana_frontend/core.cljs"],"mappings":"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","names":["flexiana-frontend.core/value-string-1","reagent.core.atom","flexiana-frontend.core/value-string-2","flexiana-frontend.core/scramble-text-inputs","cljs.core/deref","p1__26828#","p1__26829#","cljs.core/reset!","flexiana-frontend.core/process-response","resp","cljs.core._EQ_","js/alert","flexiana-frontend.core/scramble-request","endpoint","c__26467__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__26468__auto__","switch__26355__auto__","state_26838","state_val_26839","inst_26830","inst_26831","inst_26832","cljs.core/PersistentHashMap","inst_26833","cljs.core.async.impl.ioc-helpers/take!","inst_26835","inst_26836","cljs.core.async.impl.ioc-helpers/return-chan","statearr-26840","state-machine__26356__auto__","ret-value__26357__auto__","result__26358__auto__","cljs.core/keyword-identical?","ex__26359__auto__","e26841","statearr-26842","cljs.core/seq","statearr-26843","cljs.core/first","state__26469__auto__","statearr-26844","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get","flexiana-frontend.core/scramble-send-button","flexiana-frontend.core/home-page","flexiana-frontend.core/mount-root","reagent.dom.render","js/document","flexiana-frontend.core/init!"],"sourcesContent":["(ns flexiana-frontend.core\n    (:require\n      [reagent.core :as r]\n      [reagent.dom :as d]\n      [cljs-http.client :as http]\n      [cljs.core.async :refer [<!]])\n      (:require-macros [cljs.core.async.macros :refer [go]])\n)\n\n;; -------------------------\n;; Views\n\n(def value-string-1 (r/atom \"\"))\n(def value-string-2 (r/atom \"\"))\n\n(defn scramble-text-inputs []\n      (fn []\n          [:p [:input {:type \"text\"\n                       :value @value-string-1\n                       :size 20\n                       :placeholder \"String 1\"\n                       :on-change #(reset! value-string-1 (-> % .-target .-value))}]\n\n          [:input {:type \"text\"\n                   :style {:margin-left \"10px\"}\n                   :value @value-string-2\n                   :size 20\n                   :placeholder \"String 2\"\n                   :on-change #(reset! value-string-2 (-> % .-target .-value))}]])\n)\n\n(defn process-response [resp]\n      (if (= (:status resp) 200)\n        (if (= (:body resp) true)\n          (js/alert \"Scramble found!\")\n          (js/alert \"No scramble found, try again!\"))\n        (js/alert \"Ooops, there was a problem with the request, did you write both words?\"))\n      (reset! value-string-1 \"\")\n      (reset! value-string-2 \"\")\n)\n\n(defn scramble-request [endpoint]\n      (go (process-response (<! (http/get endpoint {:with-credentials? false})))))\n\n(defn scramble-send-button []\n      [:input {:type  \"button\"\n          :value \"Scramble?\"\n          :on-click #(scramble-request (str \"http://localhost:4000/scramble/\" @value-string-1 \"/\" @value-string-2))\n               }]\n)\n\n(defn home-page []\n      [:div [:h2 \"Scramble finder\"]\n       [scramble-text-inputs]\n       [scramble-send-button]\n       ])\n\n;; -------------------------\n;; Initialize app\n\n(defn mount-root []\n  (d/render [home-page] (.getElementById js/document \"app\")))\n\n(defn ^:export init! []\n  (mount-root))\n"]}